load("/home/au687642/Documents/Postdoc/NegBin/SigMoS/data/BRCA21.rda")
poisson <- readRDS("Documents/Postdoc/NegBin/SigMoS/data/SimulatedDataPoisson.rds")
save(poisson, "SimulatedDataPoisson.rda")
?save
save(poisson,file = "SimulatedDataPoisson.rda")
getwd()
load("/home/au687642/SimulatedDataPoisson.rda")
rm(poisson)
load("/home/au687642/SimulatedDataPoisson.rda")
setwd("Documents/Postdoc/NegBin/SigMoS/data/")
rm(list=ls())
NBn <- readRDS("SimulatedDataNBn.rds")
save(NBn, file = "SimulatedDataNBn.rda")
rm(list=ls())
NBalpha10 <- readRDS("SimulatedDataNBalpha10.rds")
save(NBalpha10, file = "SimulatedDataNBalpha10.rda")
rm(list=ls())
NBalpha200 <- readRDS("SimulatedDataNBalpha200.rds")
save(NBalpha200, file = "SimulatedDataNBalpha200.rda")
str(NBalpha200[[1]])
getwd()
rm(list=ls())
poisson <- readRDS("SimulatedDataPoisson.rds")
setwd("~/Documents/Postdoc/NegBin/CV_ModSel_with_NB")
rm(list=ls())
poisson <- readRDS("SimulatedDataPoisson.rds")
poisson <- lapply(t(), poisson)
lapply
?lapply
poisson <- lapply(t, poisson)
poissoqqn <- lapply("t", poisson)
str(t(poisson[[1]]))
poissoqqn <- lapply(poisson, t)
str(poissoqqn[[1]])
str(poissoqqn[[2]])
str(poissoqqn[[3])
str(poissoqqn[[3]])
rm(list=ls())
poisson <- readRDS("SimulatedDataPoisson.rds")
poisson <- lapply(poisson, t)
save(poisson,file = "SimulatedDataPoisson.rda")
rm(list=ls())
NBn <- readRDS("SimulatedDataNBn.rds")
NBn <- lapply(NBn, t)
save(NBn, file = "SimulatedDataNBn.rda")
rm(list=ls())
NBalpha10 <- readRDS("SimulatedDataNBalpha10.rds")
NBalpha10 <- lapply(NBalpha10, t)
save(NBalpha10, file = "SimulatedDataNBalpha10.rda")
rm(list=ls())
NBalpha200 <- readRDS("SimulatedDataNBalpha200.rds")
NBalpha200 <- lapply(NBalpha200, t)
save(NBalpha200, file = "SimulatedDataNBalpha200.rda")
str(NBalpha200[[1]])
setwd("~/Documents/Postdoc/NegBin/CV_ModSel_with_NB/OtherMethods")
setwd("~/Documents/Postdoc/NegBin/CV_ModSel_with_NB/OtherMethods/Plot")
rm(list=ls())
library(ggplot2)
library(gridExtra)
library(ggpubr)
df10 <- readRDS("AllMethodsRes_Sim100NB10alpha5sig100pat2.rds")
df200 <- readRDS("AllMethodsRes_Sim100NB200alpha5sig100pat2.rds")
setwd("~/Documents/Postdoc/NegBin/SigMoS/")
install.packages("roxygen2")
install.packages("libxml2-dev")
roxygen2::roxygenize()
?NMFPois
p<- CVmodsel(BRCA21, k=2)
library(SigMoS)
p<- CVmodsel(BRCA21, k=2)
roxygen2::roxygenize()
library(SigMoS)
?sigmos
p<- CVmodsel(BRCA21, k=2)
p<- CVmodsel(BRCA21, k=2:5)
p$NegBin
str(p$NegBin)
p<- CVmodsel(BRCA21, k=2:5, patient_specific = T)
p$NegBin
p$NegBin$res_nmf
setwd("~/Documents/Postdoc/NegBin/CV_ModSel_with_NB/RealDataBRCA21")
rm(list=ls())
library(ggplot2)
library(dplyr)
library(DescTools)
library(ggpubr)
library(gridExtra)
library(SQUAREM)
library(grid)
poisson <- readRDS("CVpoisBRCAres100iterNew.rds")
nbalpha <- readRDS("CVnbBRCAresNew.rds")
nbalpha_i <- readRDS("CVnbnBRCAres.rds")
# Plot CV ####
n_sig = poisson$sig_no
data1 <- data.frame(GKL = c(poisson$CVcost, nbalpha$CVcost, nbalpha_i$CVcost),
id = c(rep("#0072B2", length(poisson$CVcost)), rep("#009E73", length(nbalpha$CVcost)),
rep("#8b0000", length(nbalpha_i$CVcost))))
#    method = c(rep("Po-NMF", length(GKL_poisson)), rep(expression(paste("NB"[1],"-NMF")), length(GKL_nbalpha)),
#               rep(expression(paste("NB"[N],"-NMF")), length(GKL_nbalpha_i))))
upper <- c(sapply(poisson$CVcostall,quantile, probs = 0.75),sapply(nbalpha$CVcostall,quantile, probs = 0.75),
sapply(nbalpha_i$CVcostall,quantile, probs = 0.75))
lower <- c(sapply(poisson$CVcostall,quantile, probs = 0.25),sapply(nbalpha$CVcostall,quantile, probs = 0.25),
sapply(nbalpha_i$CVcostall,quantile, probs = 0.25))
data1 <- data1 %>% mutate(low = lower, high = upper)
tostring <- as_labeller(c("#0072B2" = "Po-NMF", "#009E73" =expression(paste("NB-NMF")),
"#8b0000" = expression(paste("NB"[N],"-NMF"))))
names<-c("Po-NMF", expression(paste("NB-NMF")), expression(paste("NB"[N],"-NMF")))
data1$type = "CV"
# including BIC
BICpoisson = -2*poisson$FDcost + log(21)*(21*c(2:8)+96*c(2:8))
BICnb = -2*nbalpha$FDcost + log(21)*(21*c(2:8)+96*c(2:8))
BICnbn = -2*nbalpha_i$FDcost + log(21)*(21*c(2:8)+96*c(2:8))
data2 = data.frame(GKL = c(BICpoisson,BICnb,BICnbn),
id = c(rep("#0072B2", length(poisson$CVcost)), rep("#009E73", length(nbalpha$CVcost)),
rep("#8b0000", length(nbalpha_i$CVcost))),
low = c(BICpoisson,BICnb,BICnbn),
high = c(BICpoisson,BICnb,BICnbn), type = "BIC")
data = rbind(data1,data2)
data$n_sig = c(2:8)
data$type = factor(data$type, levels = c("CV","BIC"))
data$id = factor(data$id, levels = c("#0072B2", "#009E73", "#8b0000"))
# Poisson ####
colnum = "#0072B2"
datanew = data[data$id == colnum,]
p1_tmp <- ggplot(datanew, aes(x = n_sig, y = GKL)) +
geom_point(color = colnum) +
geom_line(color = colnum) +
geom_errorbar(aes(ymin=low, ymax=high), width=.1, color = colnum) +
facet_grid(rows = vars(type), scales = "free") +
theme(strip.background = element_blank(),
strip.text = element_blank(),
axis.text = element_text(size=14),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20),
line = element_line(margin(b = 6, l = 6)),
legend.position = "none",
plot.title = element_text(size = 20)) +
geom_point(aes(x = rep(c(3,6),each = 7), y = rep(GKL[c(2,12)],each = 7)), size = 4.5, shape = 1, color = colnum) +
#scale_color_manual(values=unique(data$id), name = "Methods:",
#                   labels = c("Po-NMF", expression(paste("NB"[1],"-NMF")), expression(paste("NB"[N],"-NMF")))) +
labs(x = " ", y = "BIC                 cost") +
scale_x_continuous(breaks = c(2:8))+
ggtitle("Po-NMF")
p1 = ggplot_gtable(ggplot_build(p1_tmp))
p1$heights[7] = 2*p1$heights[7]
grid.draw(p1)
# Negative Binomial NB-NMF ####
colnum = "#009E73"
datanew = data[data$id == colnum,]
p2_tmp <- ggplot(datanew, aes(x = n_sig, y = GKL)) +
geom_point(color = colnum) + geom_line(color = colnum) +
geom_errorbar(aes(ymin=low, ymax=high), width=.1, color = colnum) +
facet_grid(rows = vars(type), scales = "free")+
theme(strip.background = element_blank(), strip.text = element_blank(),
axis.text = element_text(size=14),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20),
line = element_line(margin(b = 6, l = 6)),
legend.position = "none",
plot.title = element_text(size = 20)) +
geom_point(aes(x = rep(c(3,4),each = 7), y = rep(GKL[c(2,10)], each = 7)), size = 4.5, shape = 1, color = colnum) +
#scale_color_manual(values=unique(data$id), name = "Methods:",
#                   labels = c("Po-NMF", expression(paste("NB"[1],"-NMF")), expression(paste("NB"[N],"-NMF")))) +
labs(x = "Number of signatures", y = "") +
scale_x_continuous(breaks = n_sig)+
ggtitle(expression(paste("NB-NMF")))
#ggtitle(expression(bold(paste("NB"[N],"-NMF"))))
#dev.off()
p2 = ggplot_gtable(ggplot_build(p2_tmp))
p2$heights[7] = 2*p2$heights[7]
grid.draw(p2)
# Negative Binomial NB-N-NMF ####
colnum = "#8b0000"
datanew = data[data$id == colnum,]
p3_tmp <- ggplot(datanew, aes(x = n_sig, y = GKL)) +
geom_point(color = colnum) + geom_line(color = colnum) +
geom_errorbar(aes(ymin=low, ymax=high), width=.1, color = colnum) +
facet_grid(rows = vars(type), scales = "free")+
theme(strip.background = element_blank(),
strip.text = element_blank(),
axis.text = element_text(size=14),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20),
line = element_line(margin(b = 6, l = 6)),
legend.position = "none",
plot.title = element_text(size = 20)) +
geom_point(aes(x = rep(c(3,3),each = 7), y = rep(GKL[c(2,9)], each = 7)), size = 4.5, shape = 1, color = colnum) +
labs(x = "", y = "") +
scale_x_continuous(breaks = n_sig)+
ggtitle(expression(paste("NB"[N],"-NMF")))
p3 = ggplot_gtable(ggplot_build(p3_tmp))
p3$heights[7] = 2*p3$heights[7]
grid.draw(p3)
# Plot residuals ####
rm(list = setdiff(ls(), c("p1","p2","p3", "poisson", "nbalpha", "nbalpha_i")))
load("BRCA21.RData")
dataset = V
source("NMFPoisEM.R")
source("alphaNR.R")
source("NMFNBMM.R")
# Poisson ####
res_p <- NMFPoisEM(dataset, which.min(poisson$CVcost)+1, tol = 1e-2, seed = sample(1:1000,3))
W_p <- res_p$E
H_p <- res_p$P
rsd_p = (dataset - H_p%*%W_p)
rsd_norm = rsd_p/(sqrt(H_p%*%W_p))
str(W_p)
funupper = function(x) 2*sqrt(x)
funlower = function(x) -2*sqrt(x)
dataPois = data.frame(obs = as.vector(H_p%*%W_p),Residuals = as.vector(rsd_p), residual_norm = as.vector(rsd_norm))
r1 <- ggplot(dataPois, aes(x = obs, y = Residuals))+
geom_point()+
scale_x_log10()+
stat_function(fun = funupper, color = "#0072B2", size = 1 ) +
stat_function(fun = funlower, color = "#0072B2", size = 1 ) +
#ylim(min(rsd_p),max(rsd_p)) +
ylim(-100,100) +
theme(strip.background = element_blank(), strip.text = element_blank(),
axis.text = element_text(size=14),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20),
line = element_line(margin(b = 6, l = 6)),
legend.position = "none",
plot.title = element_text(size = 20)) +
xlab(" ") + ylab("Raw residuals")
r1
rn1 = ggplot(dataPois, aes(x = residual_norm, y = obs))+
geom_point()+
scale_y_log10(breaks = c(10,100,10000), label = c(10,100,10000))+
xlim(-5,5) +
#xlim(0,500)+
geom_vline(xintercept = c(qnorm(c(0.01,0.99)),
quantile(rsd_norm,c(0.01,0.99))),
col = c(rep("#F0E442",2), rep("#0072B2",2)), size = 1)+
theme(strip.background = element_blank(), strip.text = element_blank(),
axis.text = element_text(size=14),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20),
line = element_line(margin(b = 6, l = 6)),
legend.position = "none",
plot.title = element_text(size = 20)) +
xlab(" ") + ylab("")
rn1
dataPois$dummyY = rep(0, nrow(dataPois))
rn1_q <- ggplot(dataPois, aes(x = rsd_norm, y = dummyY)) +
geom_point() +
ylim(-0.05,0.05) +
geom_vline(xintercept = c(qnorm(c(0.01,0.05,0.2,0.8,0.95,0.99)),
quantile(rsd_norm,c(0.01,0.05,0.2,0.8,0.95,0.99))),
col = c(rep("mediumpurple1",6), rep("mediumpurple4",6)),
linetype = c(rep("dashed",6), rep("twodash",6)))+
theme(strip.background = element_blank(), strip.text = element_blank(),
axis.text.x = element_text(size=11),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15),
axis.ticks.y = element_blank(),
axis.text.y = element_blank(),
line = element_line(margin(b = 6, l = 6)),
legend.position = "none",
plot.margin = unit(c(4,1,1,1),"cm"),
plot.title = element_text(size = 15)) +
xlab(" ") + ylab(" ")+ggtitle("Poisson")
rn1_q
# Negative Binomial NB-NMF ####
rm(list=setdiff(ls(), c("p1","p2","p3", "poisson", "nbalpha", "nbalpha_i", "r1", "rn1", "rn1_q")))
load("BRCA21.RData")
dataset = V
source("NMFPoisEM.R")
source("alphaNR.R")
source("NMFNBMM.R")
alpha = alphaNR(dataset,which.min(nbalpha$CVcost)+1)
res_nb <- NMFNBMM(dataset, which.min(nbalpha$CVcost)+1, alpha = alpha, tol = 1e-2, seed= sample(1:1000,5))
W_nb <- res_nb$E
H_nb <- res_nb$P
rsd_nb = (dataset - H_nb%*%W_nb)
rsd_norm = rsd_nb/(sqrt((H_nb%*%W_nb)*(1+(H_nb%*%W_nb)/alpha)))
pp_nb <- length(which(rsd_nb<2*sqrt(data*(1+data/alpha)) & rsd_nb>-2*sqrt(data*(1+data/alpha))))/length(rsd_nb)
data=dataset
pp_nb <- length(which(rsd_nb<2*sqrt(data*(1+data/alpha)) & rsd_nb>-2*sqrt(data*(1+data/alpha))))/length(rsd_nb)
pp_nb
setwd("~/Documents/Postdoc/NegBin/SigMoS")
roxygen2::roxygenize()
rm(list=ls())
roxygen2::roxygenize()
library(SigMoS)
p<- CVmodsel(BRCA21, k=2:5, patient_specific = T)
setwd("~/Documents/Postdoc/NegBin/CV_ModSel_with_NB/RealDataBRCA21")
setwd("~/Documents/Postdoc/NegBin/SigMoS")
rm(list=ls())
roxygen2::roxygenize()
library(SigMoS)
p<- CVmodsel(BRCA21, k=2:4, patient_specific = T)
rm(list=ls())
roxygen2::roxygenize()
setwd("~/Documents/Postdoc/NegBin/SigMoS")
library(SigMoS)
p<- CVmodsel(SimulatedDataPoisson[[1]], k=4:6, patient_specific = T)
p<- CVmodsel(SimulatedDataNBalpha10[[1]], k=4:6, patient_specific = T)
p<- CVmodsel(SimulatedDataNBalpha10[[1]], k=4:6, patient_specific = F)
library(SigMoS)
?BRCA21
library(SigMoS)
browseVignettes("SigMoS")
browseVignettes("SigMoS)
"
)
browseVignettes(SigMoS)
library(SigMoS)
remotes::install_local(build_vignettes = TRUE)
install.packages("remotes")
remotes::install_local(build_vignettes = TRUE)
?sigmos
library(SigMoS)
nsig_pois = sigmos(data = BRCA21, k = 2:8, method = "Poisson")
k <- 2:8
k <- 2:8
nsig_pois <- list()
cost <- c()
for (i in k){
nsig_pois[[i-1]] = sigmos(data = BRCA21, k = i, method = "Poisson")
cost <- c(cost, nsig_pois$cost_k)
}
k_vec <- 2:8
nsig_pois <- list()
cost <- c()
for (i in k_vec){
nsig_pois[[i-1]] = sigmos(data = BRCA21, k = i, method = "Poisson")
cost <- c(cost, nsig_pois$cost_k)
}
k_poisson <- k_vec[which.min(cost)]
k_poisson
?NMFPois
k_poisson
k_vec
cost
nsig_pois
nsig_pois[[i-1]]$cost_k
cost
nsig_pois[[1]]$cost_k
nsig_pois[[2]]$cost_k
nsig_pois[[3]]$cost_k
i
library(ggplot2)
library(SigMoS)
k_vec <- 2:8
nsig_pois <- list()
cost <- c()
for (i in k_vec){
nsig_pois[[i-1]] = sigmos(data = BRCA21, k = i, method = "Poisson")
print(nsig_pois[[i-1]]$cost_k)
print(cost)
cost = c(cost, nsig_pois[[i-1]]$cost_k)
print(cost)
}
k_poisson = k_vec[which.min(cost)]
k_poisson
res_pois = NMFPois(M = BRCA21, N = k_poisson)
res_pois
W_p <- res_pois$E
H_p <- res_pois$P
rsd_p = (BRCA21 - H_p%*%W_p)
rsd_norm = rsd_p/(sqrt(H_p%*%W_p))
funupper = function(x) 2*sqrt(x)
funlower = function(x) -2*sqrt(x)
dataPois = data.frame(obs = as.vector(H_p%*%W_p),Residuals = as.vector(rsd_p), residual_norm = as.vector(rsd_norm))
ggplot(dataPois, aes(x = obs, y = Residuals))+
geom_point()+
scale_x_log10()+
stat_function(fun = funupper, color = "#0072B2", size = 1 ) +
stat_function(fun = funlower, color = "#0072B2", size = 1 ) +
ylim(-100,100) +
theme(strip.background = element_blank(), strip.text = element_blank(),
axis.text = element_text(size=14),
axis.title.x = element_text(size=20),
axis.title.y = element_text(size=20),
line = element_line(margin(b = 6, l = 6)),
legend.position = "none",
plot.title = element_text(size = 20)) +
xlab("Estimated mean") + ylab("Raw residuals")
res_nb
k_NB
k_poisson
W_p
nisg_nb
dataPois
k_vec <- 2:8
nsig_nb <- list()
cost <- c()
for (i in k_vec){
nsig_nb[[i-1]] = sigmos(data = BRCA21, k = i, method = "NB")
cost <- c(cost, nsig_nb[[i-1]]$cost_k)
}
k_NB <- k_vec[which.min(cost)]
res_nb = sigmos(data = BRCA21, k = k_NB, method = "NB")
k_NB
res_nb
?NMFNB
